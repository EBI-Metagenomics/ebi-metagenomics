<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>uk.ac.ebi.interpro.metagenomics.memi</groupId>
        <artifactId>memi</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>uk.ac.ebi.interpro.metagenomics.memi</groupId>
    <artifactId>memi-spring-mvc</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>MEMI Spring MVC</name>

    <!--<licenses>-->
    <!--<license>-->
    <!--<name>The Apache Software License, Version 2.0</name>-->
    <!--<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>-->
    <!--<distribution>repo</distribution>-->
    <!--</license>-->
    <!--</licenses>-->

    <organization>
        <name>EMBL - European Bioinformatics Institute</name>
        <url>http://www.ebi.ac.uk/</url>
    </organization>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.springframework.version>3.0.5.RELEASE</org.springframework.version>
    </properties>

    <!-- Most of the dependencies are ordered by topics (e.g. Spring) or by scope -->
    <dependencies>
        <!-- The following dependencies are used for Spring MVC development, included libs for JSTL-->
        <!-- Spring framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Spring MVC framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Package for Spring test integration -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework.version}</version>
            <scope>test</scope>
        </dependency>
        <!--
            JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
            Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>3.0.5.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.jdbc</groupId>
            <artifactId>com.springsource.oracle.jdbc</artifactId>
            <version>10.2.0.2</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Dependencies for data persistence with Hibernate -->
        <dependency>
            <groupId>uk.ac.ebi.interpro.scan</groupId>
            <artifactId>generic-jpa-dao</artifactId>
            <version>0.1-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Spring reference recommends to use SL4j, because the runtime discovery algorithm in commons-logging is problematic! -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.5.8</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.8</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.8</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Packages for JSTL support -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <!-- Packages to support user input validation within input forms (like the login or the submit forms) -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.0.2.GA</version>
        </dependency>
        <!-- This package provides an API for HTTP servlet requests and responses -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>
        <!-- Added the package for the creation of emails -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.1</version>
        </dependency>
        <!-- This package is a templating system (also for email creation) -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.6-beta1</version>
        </dependency>
        <!-- List of dependencies with test scope -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>
        <!-- List of dependencies with compile scope-->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Use Java 6 language features -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <!-- JavaDocs (generate: mvn javadoc:javadoc, package: mvn javadoc:jar) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <overview/>
                </configuration>
            </plugin>
            <!-- Create JAR of source files (source:jar, source:test-jar) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <!-- For further info on how to config the jetty plugin please visit...-->
            <!-- http://docs.codehaus.org/display/JETTY/Maven+Jetty+Plugin-->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.26</version>
                <!-- Set up the context path and the default port to 8081 -->
                <configuration>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                    </webAppConfig>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>8081</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-2.1</artifactId>
                        <version>6.1.14</version>
                    </dependency>
                    <dependency>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- This plugin ensures that filtering is also work for files within the spring webapp directory -->
            <!-- Found it on http://stephou.wordpress.com/2010/03/22/filtering-web-inf-files-in-maven-webapp/ -->
            <!-- For a more detailed description please visit http://maven.apache.org/plugins/maven-war-plugin/examples/adding-filtering-webresources.html-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF/spring</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF/spring</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <!-- Filtering is activated, because we want to provide jdbc connection
        parameters provided by a Maven profile (specified within the setting.xml file) -->
        <resources>
            <resource>
                <directory>../../memi-spring-mvc/src/main/webapp</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>../../memi-spring-mvc/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>../../memi-spring-mvc/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <finalName>memi</finalName>
    </build>
</project>