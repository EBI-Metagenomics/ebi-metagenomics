<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>memi</artifactId>
        <groupId>uk.ac.ebi.interpro.metagenomics</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>uk.ac.ebi.interpro.metagenomics</groupId>
    <artifactId>memi-spring-mvc</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>memi-spring-mvc</name>
    <packaging>war</packaging>

    <url>http://maven.apache.org</url>
    <!--<licenses>-->
    <!--<license>-->
    <!--<name>The Apache Software License, Version 2.0</name>-->
    <!--<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>-->
    <!--<distribution>repo</distribution>-->
    <!--</license>-->
    <!--</licenses>-->

    <repositories>
        <!--iText repository-->
        <repository>
            <id>itextpdf.com</id>
            <name>Maven Repository for iText</name>
            <url>http://maven.itextpdf.com/</url>
        </repository>
    </repositories>


    <organization>
        <name>EMBL - European Bioinformatics Institute</name>
        <url>http://www.ebi.ac.uk/</url>
    </organization>

    <properties>
        <tiles.version>2.2.2</tiles.version>
    </properties>

    <!-- Most of the dependencies are ordered by topics (e.g. Spring) or by scope -->
    <dependencies>
        <dependency>
            <groupId>uk.ac.ebi.interpro.metagenomics</groupId>
            <artifactId>memi-model</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>uk.ac.ebi.interpro.metagenomics</groupId>
            <artifactId>memi-persistence</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>uk.ac.ebi.interpro.metagenomics</groupId>
            <artifactId>memi-business</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- Rome is an API for reading/writing RSS feeds -->
        <!--<dependency>-->
        <!--<groupId>net.java.dev.rome</groupId>-->
        <!--<artifactId>rome</artifactId>-->
        <!--<version>1.0.0</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>net.java.dev.rome</groupId>-->
        <!--<artifactId>rome-fetcher</artifactId>-->
        <!--<version>1.0.0</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>rome</groupId>
            <artifactId>rome</artifactId>
            <version>0.9</version>
        </dependency>
        <dependency>
            <groupId>rome</groupId>
            <artifactId>rome-fetcher</artifactId>
            <version>0.3</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.ehcache-spring-annotations</groupId>
            <artifactId>ehcache-spring-annotations</artifactId>
            <version>1.1.2</version>
        </dependency>

        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.12.1.GA</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Spring MVC framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <!-- Spring reference recommends to use SL4j, because the runtime discovery algorithm in commons-logging is problematic! -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.5.8</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.8</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.8</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Packages to support user input validation within input forms (like the login or the submit forms) -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.0.2.GA</version>
        </dependency>
        <!-- This package provides an API for HTTP servlet requests and responses -->
        <!-- Added the package for the creation of emails -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.1</version>
        </dependency>
        <!-- This package is a templating system (also for email creation) -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>
        <!-- List of dependencies with compile scope-->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
            <scope>compile</scope>
        </dependency>

        <!--Apache Tiles2 dependencies (view composition framework)-->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-core</artifactId>
            <version>${tiles.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-api</artifactId>
            <version>${tiles.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-servlet</artifactId>
            <version>${tiles.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
            <version>${tiles.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-template</artifactId>
            <version>${tiles.version}</version>
        </dependency>

        <!-- Jackson JSON Mapper -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.6.4</version>
        </dependency>

        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- This package provides an API for HTTP servlet requests and responses -->

        <!-- Packages for JSTL support -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <!-- iText dependency-->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.0.4</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>memi</finalName>
        <plugins>
            <!-- For further info on how to config the jetty plugin please visit...-->
            <!-- http://docs.codehaus.org/display/JETTY/Maven+Jetty+Plugin-->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.26</version>
                <!-- Set up the context path and the default port to 8081 -->
                <configuration>
                    <webAppConfig>
                        <contextPath>/metagenomics</contextPath>
                    </webAppConfig>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>8081</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-2.1</artifactId>
                        <version>6.1.14</version>
                    </dependency>
                    <dependency>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- This plugin ensures that filtering is also work for files within the spring webapp directory -->
            <!-- Found it on http://stephou.wordpress.com/2010/03/22/filtering-web-inf-files-in-maven-webapp/ -->
            <!-- For a more detailed description please visit http://maven.apache.org/plugins/maven-war-plugin/examples/adding-filtering-webresources.html-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF/spring</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF/spring</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <!-- Filtering is activated, because we want to provide jdbc connection
        parameters provided by a Maven profile (specified within the setting.xml file) -->
        <resources>
            <resource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>metagenomics.xml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/</targetPath>
                <includes>
                    <include>metagenomics.xml</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources/</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

    <profiles>
        <profile>
            <id>default-profile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                    <version>2.5</version>
                </dependency>

                <dependency>
                    <groupId>javax.servlet.jsp</groupId>
                    <artifactId>jsp-api</artifactId>
                    <version>2.1</version>
                </dependency>

                <dependency>
                    <groupId>com.oracle.jdbc</groupId>
                    <artifactId>com.springsource.oracle.jdbc</artifactId>
                    <version>10.2.0.2</version>
                </dependency>
            </dependencies>

            <properties>
                <pathToAnalysisDirectory>/ebi/production/interpro/metagenomics/results/</pathToAnalysisDirectory>
                <dailyErrorAppParam>${project.build.directory}/memi-ERROR.log4j</dailyErrorAppParam>
                <dailyDebugAppParam>${project.build.directory}/memi-DEBUG.log4j</dailyDebugAppParam>
                <dailyWarnAppParam>${project.build.directory}/memi-WARN.log4j</dailyWarnAppParam>
                <log4j.log.level>debug</log4j.log.level>
            </properties>
        </profile>


        <!-- Build test war file using
        mvn -Pwar,test-war clean install   -->
        <profile>
            <id>test-war</id>
            <properties>
                <deployment.folder>/ebi/www/jtest/deploy/tc-interpro-das</deployment.folder>
                <pathToAnalysisDirectory>/ebi/production/interpro/metagenomics/results/</pathToAnalysisDirectory>
                <log4j.log.file>/nfs/nobackup/interpro/development/metagenomics/web-logs/test/memi.log4j</log4j.log.file>
                <dailyErrorAppParam>/nfs/nobackup/interpro/development/metagenomics/web-logs/test/memi-ERROR.log4j</dailyErrorAppParam>
                <dailyDebugAppParam>/nfs/nobackup/interpro/development/metagenomics/web-logs/test/memi-DEBUG.log4j</dailyDebugAppParam>
                <dailyWarnAppParam>/nfs/nobackup/interpro/development/metagenomics/web-logs/test/memi-WARN.log4j</dailyWarnAppParam>
                <log4j.log.level>info</log4j.log.level>
            </properties>
        </profile>

        <!-- Build production war file using
        mvn -Pwar,prod-war clean install   -->
        <profile>
            <id>prod-war</id>
            <properties>
                <deployment.folder>/ebi/www/jlive/deploy/tc-interpro-das</deployment.folder>
                <pathToAnalysisDirectory>/ebi/production/interpro/metagenomics/results/</pathToAnalysisDirectory>
                <log4j.log.file>/nfs/nobackup/interpro/development/metagenomics/web-logs/live/memi.log4j</log4j.log.file>
                <dailyErrorAppParam>/nfs/nobackup/interpro/development/metagenomics/web-logs/live/memi-ERROR.log4j</dailyErrorAppParam>
                <dailyDebugAppParam>/nfs/nobackup/interpro/development/metagenomics/web-logs/live/memi-DEBUG.log4j</dailyDebugAppParam>
                <dailyWarnAppParam>/nfs/nobackup/interpro/development/metagenomics/web-logs/live/memi-WARN.log4j</dailyWarnAppParam>
                <log4j.log.level>WARN</log4j.log.level>
            </properties>
        </profile>


        <profile>
            <id>war</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.keyboardsamurais.maven</groupId>
                        <artifactId>maven-timestamp-plugin</artifactId>
                        <version>1.0</version>
                        <configuration>
                            <propertyName>timestamp</propertyName>
                            <!-- timestampPattern using SimpleDateFormat format. -->
                            <timestampPattern>yyyyMMdd-HHmm</timestampPattern>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.1-alpha-1</version>
                        <configuration>
                            <!-- Currently need to comment out the warName element below
                      for the jetty:run-war target to work. -->
                            <warName>${project.name}-${timestamp}</warName>
                            <!-- NOTE that the webResources filtering as exemplified
                          below does NOT work recursively - only the contents of the explicit directory
                          listed are filtered-->
                            <webResources>
                                <resource>
                                    <directory>${basedir}/src/main/webapp/</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>
                                            MydasServerConfig.xml
                                        </include>
                                    </includes>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
